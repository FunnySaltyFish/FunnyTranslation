// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = Versions.kotlinVersion
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google/'}
        maven { url 'https://maven.aliyun.com/repository/jcenter/'}
        maven { url "https://jitpack.io" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
//                    "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
//                    "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
//                    "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi",
//                    "-Xuse-experimental=androidx.compose.animation.ExperimentalAnimationApi",
//                    "-Xuse-experimental=androidx.compose.ExperimentalComposeApi",
//                    "-Xuse-experimental=androidx.compose.material.ExperimentalMaterialApi",
//                    "-Xuse-experimental=androidx.compose.runtime.ExperimentalComposeApi",
//                    "-Xuse-experimental=androidx.compose.ui.ExperimentalComposeUiApi",
//                    "-Xuse-experimental=coil.annotation.ExperimentalCoilApi",
//                    "-Xuse-experimental=kotlinx.serialization.ExperimentalSerializationApi",
//                    "-Xuse-experimental=com.google.accompanist.pager.ExperimentalPagerApi"
            ]

            freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}